version: 0.2

phases:
  install:
    runtime-versions:
        python: 3.11
    commands:
      - echo Installing AWS CLI and Boto3
      - pip install --upgrade awscli
      - pip install boto3
      - pip install mypy-boto3-cloudformation
      - pip install mypy-boto3-lambda
  pre_build:
    commands:
    - echo Updating WalterBackend infrastructure via CloudFormation
    - python buildspec.py
  build:
    commands:
      - echo Updating WalterBackend source code
      - mkdir walter-backend
      - cp -r src walter-backend
      - cp config.yml walter-backend
      - cp api.py walter-backend
      - cp walter.py walter-backend
      - cd walter-backend
      - zip -r ../walter-backend.zip .
      - cd ..
      - echo Dumping Walter backend source code to S3
      - aws s3 cp walter-backend.zip s3://walter-backend-src/walter-backend.zip
      - echo Updating WalterAPI source code with artifact from S3
      - aws lambda update-function-code --function-name WalterAPI-dev --s3-bucket walter-backend-src --s3-key walter-backend.zip
      - echo Updating WalterBackend source code with artifact from S3
      - aws lambda update-function-code --function-name WalterBackend-dev --s3-bucket walter-backend-src --s3-key walter-backend.zip
  post_build:
    commands:
      - echo Sleeping 60 seconds for WalterBackend to finish updating
      - sleep 60
      - echo Publishing new WalterAPI Lambda version
      - aws lambda publish-version --function-name WalterAPI-dev
      - echo Publishing new WalterBackend Lambda version
      - aws lambda publish-version --function-name WalterBackend-dev
      - echo Sleeping 60 seconds for new Walter backend lambda versions to finish publishing
      - echo Creating AppSpec file for CodeDeploy
      - python appspec.py

artifacts:
  files:
    - '**/*'

