"""
AppSpec Generator

This script is responsible for creating an `appspec.yml` file for
CodeDeploy deployments to bump the WalterAIBackend lambda from its
current version to the latest version. This script is run during
builds executed by CodeBuild and the output generated by this script
is dumped to S3 as an artifact to be used by CodeDeploy to execute
the deployment.
"""

import os

import boto3
from src.environment import get_domain
from mypy_boto3_lambda import LambdaClient

############
# TEMPLATE #
############

APPSPEC_FILE_NAME = "appspec.yml"

APPSPEC_TEMPLATE = """
version: 0.0

Resources:
  - MyFunction:
      Type: AWS::Lambda::Function
      Properties:
        Name: "WalterAIBackend-{domain}"
        Alias: "WalterAIBackend-{domain}"
        CurrentVersion: "{current_version}"
        TargetVersion: "{target_version}"
"""

#############
# ARGUMENTS #
#############

DOMAIN = get_domain(os.getenv("DOMAIN", "DEVELOPMENT"))

REGION = os.getenv("AWS_REGION", "us-east-1")

LAMBDA_NAME = f"WalterAIBackend-{DOMAIN.value}"

LAMBDA_ALIAS = f"WalterAIBackend-{DOMAIN.value}"

###########
# METHODS #
###########


def get_current_version() -> str:
    return lambda_client.get_alias(FunctionName=LAMBDA_NAME, Name=LAMBDA_ALIAS)[
        "FunctionVersion"
    ]


def get_target_version() -> str:
    return lambda_client.list_versions_by_function(FunctionName=LAMBDA_NAME)[
        "Versions"
    ][-1]["Version"]


def create_appspec(current_version: str, target_version: str) -> None:
    with open(APPSPEC_FILE_NAME, "w") as appspec:
        appspec.write(
            APPSPEC_TEMPLATE.format(
                current_version=current_version,
                target_version=target_version,
                domain=DOMAIN.value,
            )
        )


##########
# SCRIPT #
##########

lambda_client: LambdaClient = boto3.client("lambda", region_name=REGION)

current_version = get_current_version(lambda_client)
target_version = get_target_version(lambda_client)

create_appspec(current_version, target_version)
